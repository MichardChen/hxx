<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.framework.dao.TFishOrderDao">

	<select id="queryObject" resultType="com.framework.entity.TFishOrderEntity">
		select * from t_fish_order where id = #{value}
	</select>
	<select id="queryOrderByOrderNo" resultType="com.framework.entity.TFishOrderEntity">
		select * from t_fish_order where order_no = #{orderNo}
	</select>

	<select id="queryList" resultType="com.framework.entity.TFishOrderEntity">
		select * from t_fish_order where 1=1
		<if test="status != null and status != ''">
			and status = #{status}
		</if>
		<if test="orderNo != null and orderNo != ''">
			and order_no = #{orderNo}
		</if>
		<if test="createDate != null and createDate != ''">
			and create_time like concat('%', #{createDate}, '%')
		</if>
		<if test="toUserId != null and toUserId != '' and toUserId != 0">
			and to_user_id = #{toUserId}
		</if>
		order by create_time desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>

	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_fish_order 
	</select>
	 
	<insert id="save" parameterType="com.framework.entity.TFishOrderEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_fish_order
		(
			`order_no`, 
			`order_type_cd`, 
			`info_id`, 
			`from_user_id`, 
			`to_user_id`, 
			`first_pay`, 
			`second_pay`, 
			`receive_address`, 
			`receive_person`, 
			`receive_mobile`, 
			`mark`, 
			`needs`, 
			`status`, 
			`create_time`, 
			`update_time`,
			`update_by`,
			`first_pay_type`,
			`second_pay_type`,
			`logistics_no`,
			`reason`,
			`logistics_info`
		)
		values
		(
			#{orderNo}, 
			#{orderTypeCd}, 
			#{infoId}, 
			#{fromUserId}, 
			#{toUserId}, 
			#{firstPay}, 
			#{secondPay}, 
			#{receiveAddress}, 
			#{receivePerson}, 
			#{receiveMobile}, 
			#{mark}, 
			#{needs}, 
			#{status}, 
			#{createTime}, 
			#{updateTime},
			#{updateBy},
			#{firstPayType},
			#{secondPayType},
			#{logisticsNo},
			#{reason},
			#{logisticsInfo}
		)
	</insert>
	 
	<update id="update" parameterType="com.framework.entity.TFishOrderEntity">
		update t_fish_order 
		<set>
			<if test="orderNo != null">`order_no` = #{orderNo}, </if>
			<if test="orderTypeCd != null">`order_type_cd` = #{orderTypeCd}, </if>
			<if test="infoId != null">`info_id` = #{infoId}, </if>
			<if test="fromUserId != null">`from_user_id` = #{fromUserId}, </if>
			<if test="toUserId != null">`to_user_id` = #{toUserId}, </if>
			<if test="firstPay != null">`first_pay` = #{firstPay}, </if>
			<if test="secondPay != null">`second_pay` = #{secondPay}, </if>
			<if test="receiveAddress != null">`receive_address` = #{receiveAddress}, </if>
			<if test="receivePerson != null">`receive_person` = #{receivePerson}, </if>
			<if test="receiveMobile != null">`receive_mobile` = #{receiveMobile}, </if>
			<if test="mark != null">`mark` = #{mark}, </if>
			<if test="needs != null">`needs` = #{needs}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="createTime != null">`update_by` = #{updateBy}, </if>
			<if test="createTime != null">`first_pay_type` = #{firstPayType}, </if>
			<if test="createTime != null">`second_pay_type` = #{secondPayType}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime},</if>
			<if test="logisticsNo != null">`logistics_no` = #{logisticsNo},</if>
			<if test="reason != null">`reason` = #{reason},</if>
			<if test="logisticsInfo != null">`logistics_info` = #{logisticsInfo}</if>
		</set>
		where id = #{id}
	</update>
	<update id="updateOrderStatus">
		update t_fish_order
		<set>
			<if test="status != null">`status` = #{status}</if>
		</set>
		where order_no = #{orderNo}
	</update>
	<update id="updatePayType">
		update t_fish_order
		  <set>
			  <if test='flg == "0"'>
				  `first_pay_type` = #{payType},
			  </if>
			  <if test='flg == "1"'>
				  `second_pay_type` = #{payType},
			  </if>
			  <if test="status != null">`status` = #{status}</if>
		  </set>
			where order_no = #{orderNo}
	</update>
	<delete id="delete">
		delete from t_fish_order where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_fish_order where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<!-- 根据product_type分类统计有多少订单量 -->
	<select id="getOrderCountByType" resultType="com.framework.vo.report.OrderReportVo">
		select t.order_type_cd as code,c.`name` as name,count(*) as value,
			DATE_FORMAT(t.create_time,'%Y-%m-%d') as time from t_fish_order t
			left JOIN t_codemst c on c.`code`=t.order_type_cd where 1=1
		<if test="startDate != null and startDate != ''">
			AND t.create_time <![CDATA[>=]]> #{startDate}
		</if>
		<if test="endDate != null and endDate != ''">
			AND t.create_time <![CDATA[<=]]>#{endDate}
		</if>
		group by t.order_type_cd,c.`name`,DATE_FORMAT(t.create_time,'%Y-%m-%d')
		order by t.order_type_cd,DATE_FORMAT(t.create_time,'%Y-%m-%d') asc
	</select>

	<!-- 根据product_type分类统计订单总金额(预付款+尾款) 预付款：待发货、已发货、已收货；尾款：已完成-->
	<select id="getOrderAmountByType" resultType="com.framework.vo.report.OrderReportVo">
		select t.order_type_cd as code,c.`name` as name,
		sum(t.first_pay+(if(t.status!='280009',0,t.second_pay))) as value,
		DATE_FORMAT(t.create_time,'%Y-%m-%d') as time from t_fish_order t
		left JOIN t_codemst c on c.`code`=t.order_type_cd where
		t.`status` in ('280006', '280007', '280008', '280009')
		<if test="startDate != null and startDate != ''">
			AND t.create_time <![CDATA[>=]]> #{startDate}
		</if>
		<if test="endDate != null and endDate != ''">
			AND t.create_time <![CDATA[<=]]>#{endDate}
		</if>
		group by t.order_type_cd,c.`name`,DATE_FORMAT(t.create_time,'%Y-%m-%d')
		order by t.order_type_cd,DATE_FORMAT(t.create_time,'%Y-%m-%d') asc
	</select>

	<!-- 查询各个订单状态下的订单数量 -->
	<select id="getOrderCountByStatus" resultType="com.framework.vo.report.OrderReportVo">
		select t.`status` as code,c.`name` as name,count(*) as value from t_fish_order t
		left JOIN t_codemst c on c.`code`=t.`status` where 1=1
		<if test="startDate != null and startDate != ''">
			AND t.create_time <![CDATA[>=]]> #{startDate}
		</if>
		<if test="endDate != null and endDate != ''">
			AND t.create_time <![CDATA[<=]]>#{endDate}
		</if>
		group by t.`status`,c.`name`
		order by t.`status` desc
	</select>

</mapper>