<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.framework.dao.TMarketPriceDao">

	<select id="queryObject" resultType="com.framework.entity.TMarketPriceEntity">
		select * from t_market_price where id = #{value}
	</select>

	<select id="queryList" resultType="com.framework.entity.TMarketPriceEntity">
		select * from t_market_price where 1=1
		<if test="createDate != null and createDate != ''">
			and create_time like concat('%', #{createDate}, '%')
		</if>
		order by update_time desc,flg desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryPriceList" resultType="com.framework.vo.MarketPriceVo">
		select brand_series,size,price,whendate,city from t_market_price
		where flg=1
		<if test="productType != null and productType != ''">
			and brand_series=#{productType}
		</if>
		<if test="priceDate != null and priceDate != ''">
			and whendate=#{priceDate}
		</if>
		order by update_time desc,flg desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_market_price 
	</select>
	 
	<insert id="save" parameterType="com.framework.entity.TMarketPriceEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_market_price
		(
			`brand_series`, 
			`size`, 
			`price`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`,
			`flg`,
			`img`,
			`province`,
			`city`,
            `whendate`
		)
		values
		(
			#{brandSeries}, 
			#{size}, 
			#{price}, 
			#{createTime}, 
			#{createBy}, 
			#{updateTime}, 
			#{updateBy},
			#{flg},
			#{img},
			#{province},
			#{city},
		    #{whendate}
		)
	</insert>
	 
	<update id="update" parameterType="com.framework.entity.TMarketPriceEntity">
		update t_market_price 
		<set>
			<if test="brandSeries != null">`brand_series` = #{brandSeries}, </if>
			<if test="size != null">`size` = #{size}, </if>
			<if test="price != null">`price` = #{price}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
            <if test="whendate != null">`whendate` = #{whendate}, </if>
			<if test="flg != null">`flg` = #{flg}, </if>
			<if test="img != null">`img` = #{img}, </if>
			<if test="province != null">`province` = #{province}, </if>
			<if test="city != null">`city` = #{city}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}</if>
		</set>
		where id = #{id}
	</update>

	<update id="updateFlg">
		update t_market_price set flg=#{flg},update_time=#{updateTime},update_by=#{updateBy} where id=#{id}
	</update>

	<update id="updateFlgBatch">
		update t_market_price set flg=#{flg},update_time=#{updateTime},update_by=#{updateBy}
		where id in
		<foreach item="item" collection="id" open="(" separator="," close=")" index="index">
			#{item}
		</foreach>
	</update>
	
	<delete id="delete">
		delete from t_market_price where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete  from t_market_price where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>